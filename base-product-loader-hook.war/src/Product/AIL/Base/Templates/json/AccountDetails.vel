## Copyright Applied Industrial Logic Limited 2012. All rights Reserved 
##
## This program is free software; you can redistribute it and/or modify it under
## the terms of the GNU General Public License as published by the Free Software
## Foundation; either version 2 of the License, or (at your option) any later 
## version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
## more details.
##
## You should have received a copy of the GNU General Public License along with
## this program; if not, write to the Free Software Foundation, Inc., 51 
## Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
##
#####
#set( $model = $args.ModelArgRet)
#set( $pageElement = $args.PageElementArg )
#set( $id = $args.RenderIdArg )
#set( $string = '' )
#set( $dateFormat = '%1$tY-%1$tm-%1$tdT%1$tT' )
##
{
    "type": "$pageElement.Class.SimpleName",
    "id": "$id",
    "title": "$!{pageElement.formattedTitle($args)}"
    #if(${pageElement.ShowSchedule})
        #renderSchedule
    #end
    #renderAccount
}
##
#macro(renderAccount)
    #set($accounts = ${pageElement.accounts($model)})
    #if(!${accounts.Empty})
        ,"accounts": [
            #foreach($account in $pageElement.accounts($model))
                #if( $velocityCount != 1),#end
                {
                    "id": "$!{account.SystemId}",
                    "type": "$!{account.Type}",
                    #if(${account.OpeningDate})"createdDate": "${string.format(${dateFormat}, ${account.OpeningDate})}",#end
                    "name": "$!{account.Name}",
                    "currency": "$!{account.Currency}",
                    "status": "$!{account.Status}",
                    "description": "$!{account.Description}",
                    "balance": "$!{pageElement.balance($account)}"
                    #if(${pageElement.ShowStatement})
                        #renderStatement($account)
                    #end
                }
            #end
        ]
    #end
#end
##
#macro(renderStatement $account)
    ,"statement": [
        #foreach($line in ${pageElement.journalLines($account)})
            #if( $velocityCount != 1),#end
            {
                "transactionDate": "${string.format(${dateFormat}, ${line.journal.TransactionDate})}",
                "journalLineId": "${line.SystemId}",
                "journalId": "${line.journal.SystemId}",
                "description": "${line.Description}",
                "type": "${line.Type}",
                "transactionType": "${line.TransactionType}",
                "amount": "${line.Amount}"
            }
        #end
    ]
#end
##
#macro(renderSchedule)
    ,"schedule": {
        #set($schedule = ${pageElement.schedule($model)})
        #if($schedule)
            "type": "$!{schedule.Type}",
            "description": "$!{schedule.Description}",
            "moneyProvisions": [
                #foreach($m in ${schedule.MoneyProvision})
                    #if( $velocityCount != 1),#end
                    {
                        "paymentsStartDate": "#if(${m.PaymentsStartDate})${string.format(${dateFormat}, ${m.PaymentsStartDate})}#end",
                        "paymentsEndDate": "#if(${m.PaymentsEndDate})${string.format(${dateFormat}, ${m.PaymentsEndDate})}#end",
                        "paymentMethod": "${m.PaymentMethod.Class.SimpleName}",
                        "number": "${m.Number}",
                        "description": "${m.Description}",
                        "frequency": "${m.Frequency}",
                        "day": "${m.Day}",
                        "status": "${m.Status}",
                        "amount": "${m.Amount}"
                    }
                #end
               ]
        #end
    }
#end