<databaseChangeLog logicalFilePath="db.changelog.xml"
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">
	
    <changeSet id="OU-989 Create proPartyRole tables" author="richard">
        <sql dbms="mysql">
            CREATE TABLE `proPartyRole` (
              `proUID` bigint(20) NOT NULL,
              `proAttribute` longtext,
              `proCreatedBy` bigint(20) DEFAULT NULL,
              `proCreatedDate` datetime DEFAULT NULL,
              `proExternalSystemId` varchar(255) NOT NULL,
              `proForeignSystemId` varchar(255) DEFAULT NULL,
              `proLock` bit(1) DEFAULT NULL,
              `proSerialVersion` bigint(20) NOT NULL,
              `proUpdatedBy` bigint(20) DEFAULT NULL,
              `proUpdatedDate` datetime DEFAULT NULL,
              `proEndDate` timestamp (4) NULL DEFAULT NULL,
              `proStartDate` timestamp (4) NULL DEFAULT NULL,
              `proRole` varchar(255) NOT NULL,
              `proPartyUIDpar` bigint(20) NOT NULL,
              PRIMARY KEY (`proUID`),
              UNIQUE KEY `proExternalSystemId` (`proExternalSystemId`),
              KEY `FKA4654C4F6E810591` (`proPartyUIDpar`),
              CONSTRAINT `FKA4654C4F6E810591` FOREIGN KEY (`proPartyUIDpar`) REFERENCES `parParty` (`parUID`)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
            
            CREATE TABLE `proPartyRole_` (
              `proUID` bigint(20) NOT NULL,
              `REV` int(11) NOT NULL,
              `REVTYPE` tinyint(4) DEFAULT NULL,
              `proAttribute` longtext,
              `proCreatedBy` bigint(20) DEFAULT NULL,
              `proCreatedDate` datetime DEFAULT NULL,
              `proExternalSystemId` varchar(255) DEFAULT NULL,
              `proForeignSystemId` varchar(255) DEFAULT NULL,
              `proUpdatedBy` bigint(20) DEFAULT NULL,
              `proUpdatedDate` datetime DEFAULT NULL,
              `proEndDate` timestamp (4) NULL DEFAULT NULL,
              `proStartDate` timestamp (4) NULL DEFAULT NULL,
              `proRole` varchar(255) DEFAULT NULL,
              `proPartyUIDpar` bigint(20) DEFAULT NULL,
              PRIMARY KEY (`proUID`,`REV`),
              KEY `FKE8443DF04E4CA39B` (`REV`),
              CONSTRAINT `FKE8443DF04E4CA39B` FOREIGN KEY (`REV`) REFERENCES `revRevision` (`revId`)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
        </sql>
	</changeSet>
    
    <changeSet id="OU-989 Create claim to party role join" author="richard">
        <sql dbms="mysql">
            CREATE TABLE `jClaProPro` (
              `UIDcla` bigint(20) NOT NULL,
              `partyRoleUIDpro` bigint(20) NOT NULL,
              UNIQUE KEY `partyRoleUIDpro` (`partyRoleUIDpro`),
              KEY `FK618B1EAE92962E76` (`partyRoleUIDpro`),
              KEY `FK618B1EAEE0CB4A47` (`UIDcla`),
              CONSTRAINT `FK618B1EAE92962E76` FOREIGN KEY (`partyRoleUIDpro`) REFERENCES `proPartyRole` (`proUID`),
              CONSTRAINT `FK618B1EAEE0CB4A47` FOREIGN KEY (`UIDcla`) REFERENCES `claClaim` (`claUID`)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
            
            CREATE TABLE `jClaProPro_` (
              `REV` int(11) NOT NULL,
              `UIDcla` bigint(20) NOT NULL,
              `partyRoleUIDpro` bigint(20) NOT NULL,
              `REVTYPE` tinyint(4) DEFAULT NULL,
              PRIMARY KEY (`REV`,`UIDcla`,`partyRoleUIDpro`),
              KEY `FKCFD8B77188B4F168` (`REV`),
              CONSTRAINT `FKCFD8B77188B4F168` FOREIGN KEY (`REV`) REFERENCES `revRevision` (`revId`)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
        </sql>
    </changeSet>
    
    <changeSet id="OU-989 Create policy to party role join" author="richard">
        <sql dbms="mysql">
            CREATE TABLE `jPolProPro` (
              `UIDpol` bigint(20) NOT NULL,
              `partyRoleUIDpro` bigint(20) NOT NULL,
              UNIQUE KEY `partyRoleUIDpro` (`partyRoleUIDpro`),
              KEY `FK668CD42384156FE0` (`UIDpol`),
              KEY `FK668CD42392962E76` (`partyRoleUIDpro`),
              CONSTRAINT `FK668CD42384156FE0` FOREIGN KEY (`UIDpol`) REFERENCES `polPolicy` (`polUID`),
              CONSTRAINT `FK668CD42392962E76` FOREIGN KEY (`partyRoleUIDpro`) REFERENCES `proPartyRole` (`proUID`)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
            
            CREATE TABLE `jPolProPro_` (
              `REV` int(11) NOT NULL,
              `UIDpol` bigint(20) NOT NULL,
              `partyRoleUIDpro` bigint(20) NOT NULL,
              `REVTYPE` tinyint(4) DEFAULT NULL,
              PRIMARY KEY (`REV`,`UIDpol`,`partyRoleUIDpro`),
              KEY `FK6B0DB09C88B4F168` (`REV`),
              CONSTRAINT `FK6B0DB09C88B4F168` FOREIGN KEY (`REV`) REFERENCES `revRevision` (`revId`)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
        </sql>
    </changeSet>

    <changeSet id="OU-989 Add id column to Party" author="richard">
        <sql dbms="mysql">
            ALTER TABLE `parParty` ADD `parId` VARCHAR(255) DEFAULT NULL;
            ALTER TABLE `parParty_` ADD `parId` VARCHAR(255) DEFAULT NULL;
        </sql>
    </changeSet>
    
    <!-- The changes to party storage lead to payment methods (which are owned by parties) 
    being persisted differently. This threw up the fact that the identifier property in PaymentMethod
    was (a) not setup correctly for type merging and (b) wasn't actually references anywhere in the code.
    Hence it has been removed.  -->
    <changeSet id="OU-989 Remove redundant column from pme" author="richard">
        <sql dbms="mysql">
            ALTER TABLE `pmePaymentMethod` DROP COLUMN `pmeIdentifier`;
            ALTER TABLE `pmePaymentMethod_` DROP COLUMN `pmeIdentifier`;
        </sql>
    </changeSet>
    
</databaseChangeLog>