/* Copyright Applied Industrial Logic Limited 2002. All rights Reserved */
/*
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

package com.ail.financial;

import static com.ail.financial.PaymentMethodStatus.PENDING;
import static javax.persistence.DiscriminatorType.STRING;

import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.Enumerated;

import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;
import org.hibernate.envers.Audited;

import com.ail.annotation.TypeDefinition;
import com.ail.core.Identified;
import com.ail.core.Type;

@TypeDefinition
@Audited
@Entity
@DiscriminatorColumn(name="pmeDSC", discriminatorType=STRING)
@DiscriminatorValue("Method")
@NamedQueries({
    @NamedQuery(name = "get.paymentmethod.by.externalSystemId", query = "select pme from PaymentMethod pme where pme.externalSystemId = ?")
})
public abstract class PaymentMethod extends Type implements Identified {
    private static final long serialVersionUID = 1L;

    @Enumerated(javax.persistence.EnumType.STRING)
    private PaymentMethodStatus status;

    public PaymentMethod() {
        super();
        status = PENDING;
    }

    @Override
    public void setId(String id) {
        throw new IllegalStateException("A PaymentMethod's ID can only be generated by the PaymentMethod class, it cannot be set externally");
    }

    public PaymentMethodStatus getStatus() {
        return status;
    }

    public void setStatus(PaymentMethodStatus status) {
        this.status = status;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1 + typeHashCode();
        result = prime * result + ((status == null) ? 0 : status.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        if (!typeEquals(obj))
            return false;
        PaymentMethod other = (PaymentMethod) obj;
        if (status == null) {
            if (other.status != null)
                return false;
        } else if (!status.equals(other.status))
            return false;
        return true;
    }
}
