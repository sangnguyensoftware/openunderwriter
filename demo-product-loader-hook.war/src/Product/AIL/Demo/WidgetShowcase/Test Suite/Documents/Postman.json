{
	"info": {
		"_postman_id": "98fc5f38-c7cf-4d5e-bb8a-db4666c84960",
		"name": "WidgetShowcase",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ProductService",
			"description": null,
			"item": [
				{
					"name": "SampleArgumentAndReturnRestfulCommand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"success returned\"] = jsonData.success === true;",
									"tests[\"message content\"] =  jsonData.message === \"Your name is: richard, and your number is: 12\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "json",
									"type": "text",
									"value": "{ \"name\" : \"richard\", \"number\" : 12}"
								}
							]
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/product/AIL.Demo.WidgetShowcase/SampleArgumentAndReturnRestfulCommand",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"product",
								"AIL.Demo.WidgetShowcase",
								"SampleArgumentAndReturnRestfulCommand"
							]
						}
					},
					"response": []
				},
				{
					"name": "SampleBasicRestfulCommand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"success returned\"] = jsonData.success === true;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";"
								],
								"id": "4b1e1d8f-3850-4403-8e86-de67f4f3028a",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/product/AIL.Demo.WidgetShowcase/SampleBasicRestfulCommand",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"product",
								"AIL.Demo.WidgetShowcase",
								"SampleBasicRestfulCommand"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpgradeProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4305a966-6332-4040-b4bd-56ac6891825a",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"success returned\"] = jsonData.success === true;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
									"tests[\"message\"] = jsonData.message === \"Upgrades complete.\";"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "adam",
									"type": "string"
								},
								{
									"key": "username",
									"value": "adam@openunderwriter.org",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/product/AIL.Demo.WidgetShowcase/UpgradeProduct",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"product",
								"AIL.Demo.WidgetShowcase",
								"UpgradeProduct"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RestfulPageFlowBridge Automated",
			"description": "Automated tests for the ResfulPageFlowBridge using the WidgetShowcase.",
			"item": [
				{
					"name": "Question",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0290684c-7711-4cd1-95dd-7ae5549ef5a1",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open Question page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/Question",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"Question"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CommandButtonAction",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20dbc32c-e7a6-4fb5-ab94-2dd6c748fcaa",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open CommandButtonAction page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/CommandButtonActions",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"CommandButtonActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Valid \"Service Validation\" test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.id === \"CommandButtonActions-ServiceValidation\"'] = jsonData.page.id === \"CommandButtonActions-ServiceValidation\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"YXNzZXRbaWQ9J2NvbW1hbmRBY3Rpb25CdXR0b24nXS9hdHRyaWJ1dGVbaWQ9J3N0cmluZydd\": \"Service Validation\",\n  \"op\":\"op=Service Validation:immediate=false\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Back button to \"Service Validation\" test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\":\"op=<< Back:immediate=true\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid \"Service Validation\" test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.title === \"CommandButtonActions\"'] = jsonData.page.title === \"CommandButtonActions\"",
											"tests['page.elements[0].questions[0].error === \"Value != \\'Service Validation\\'\"'] = jsonData.page.elements[0].questions[0].error === \"Value != 'Service Validation'\"",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"YXNzZXRbaWQ9J2NvbW1hbmRBY3Rpb25CdXR0b24nXS9hdHRyaWJ1dGVbaWQ9J3N0cmluZydd\": \"Invalid Service Validation\",\n  \"op\":\"op=Service Validation:immediate=false\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "ProposerDetails",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82836226-f50d-4ff3-8309-41b8f6014718",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success === true\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open ProposerDetailsPersonal page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"saveOp\", \"op=Submit:immediate=false\");",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].fields.length === 14',",
											"    'jsonData.page.elements[1].fields[0].id === \"title\"',",
											"    'jsonData.page.elements[1].fields[0].value === \"Mr.\"',",
											"    'jsonData.page.elements[1].fields[1].id === \"otherTitle\"',",
											"    'jsonData.page.elements[1].fields[1].value === \"\"',",
											"    'jsonData.page.elements[1].fields[2].id === \"firstname\"',",
											"    'jsonData.page.elements[1].fields[2].value === \"Tester\"',",
											"    'jsonData.page.elements[1].fields[3].id === \"surname\"',",
											"    'jsonData.page.elements[1].fields[3].value === \"Testerton\"',",
											"    'jsonData.page.elements[1].fields[4].id === \"address1\"',",
											"    'jsonData.page.elements[1].fields[4].value === \"Address Line 1\"',",
											"    'jsonData.page.elements[1].fields[5].id === \"address2\"',",
											"    'jsonData.page.elements[1].fields[5].value === \"Address Line 2\"',",
											"    'jsonData.page.elements[1].fields[6].id === \"address3\"',",
											"    'jsonData.page.elements[1].fields[6].value === \"Address Line 3\"',",
											"    'jsonData.page.elements[1].fields[7].id === \"address4\"',",
											"    'jsonData.page.elements[1].fields[7].value === \"Address Line 4\"',",
											"    'jsonData.page.elements[1].fields[8].id === \"town\"',",
											"    'jsonData.page.elements[1].fields[8].value === \"Town\"',",
											"    'jsonData.page.elements[1].fields[9].id === \"county\"',",
											"    'jsonData.page.elements[1].fields[9].value === \"County\"',",
											"    'jsonData.page.elements[1].fields[10].id === \"postcode\"',",
											"    'jsonData.page.elements[1].fields[10].value === \"POSTCODE\"',",
											"    'jsonData.page.elements[1].fields[11].id === \"phone\"',",
											"    'jsonData.page.elements[1].fields[11].value === \"01234 56789\"',",
											"    'jsonData.page.elements[1].fields[12].id === \"mobile\"',",
											"    'jsonData.page.elements[1].fields[12].value === \"02345 67890\"',",
											"    'jsonData.page.elements[1].fields[13].id === \"email\"',",
											"    'jsonData.page.elements[1].fields[13].value === \"testing@testing.com\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"",
											""
										],
										"id": "bbeb14b0-737e-4066-a9e1-8e4ac91b352c",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/ProposerDetailsPersonal",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"ProposerDetailsPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update values",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].fields[0].value === \"Mrs.\"',",
											"    'jsonData.page.elements[1].fields[1].value === \"\"',",
											"    'jsonData.page.elements[1].fields[2].value === \"Retset\"',",
											"    'jsonData.page.elements[1].fields[3].value === \"Notretset\"',",
											"    'jsonData.page.elements[1].fields[4].value === \"Eht Esuoh\"',",
											"    'jsonData.page.elements[1].fields[5].value === \"The Farm\"',",
											"    'jsonData.page.elements[1].fields[6].value === \"The Lane\"',",
											"    'jsonData.page.elements[1].fields[7].value === \"The Village\"',",
											"    'jsonData.page.elements[1].fields[8].value === \"Nwot\"',",
											"    'jsonData.page.elements[1].fields[9].value === \"Ytnuoc\"',",
											"    'jsonData.page.elements[1].fields[10].value === \"PP1 PP2\"',",
											"    'jsonData.page.elements[1].fields[11].value === \"777 666555\"',",
											"    'jsonData.page.elements[1].fields[13].value === \"retset@notretset.com\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"",
											""
										],
										"id": "972cee01-c3b0-4b59-bd5f-976f7e8d1dd7",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{saveOp}}\",\n  \"title\": \"Mrs.\",\n  \"firstname\": \"Retset\",\n  \"surname\": \"Notretset\",\n  \"address1\": \"Eht Esuoh\",\n  \"address2\": \"The Farm\",\n  \"address3\": \"The Lane\",\n  \"address4\": \"The Village\",\n  \"town\": \"Nwot\",\n  \"county\": \"Ytnuoc\",\n  \"postcode\": \"PP1 PP2\",\n  \"phone\": \"777 666555\",\n  \"email\": \"retset@notretset.com\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "ContactSystemDetails",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a025f860-62cd-4dc7-9e10-7577cb0449b6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open ContactSystemDetails page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19f20139-f757-479e-a3a5-6cf07e2bbab5",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.title === \"ContactSystemDetails\"',",
											"    'jsonData.page.elements[1].type === \"ContactSystemDetails\"',",
											"    'jsonData.page.elements[1].contactSystem.length === 2',",
											"    'jsonData.page.elements[1].contactSystem[0].type === \"i18n_contact_system_main_postal_address\"',",
											"    'jsonData.page.elements[1].contactSystem[0].fields.length === 8',",
											"    'jsonData.page.elements[1].contactSystem[1].type === \"i18n_contact_system_main_phone_number\"',",
											"    'jsonData.page.elements[1].contactSystem[1].fields.length === 1'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"address1Id\", jsonData.page.elements[1].contactSystem[0].fields[0].valueId);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/ContactSystemDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"ContactSystemDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14ffaae7-f59d-4df3-ad3c-bdd519b8373a",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].contactSystem[0].fields[0].value === \"\"',",
											"    'jsonData.page.elements[1].contactSystem[0].fields[0].error === \"required\"',",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"{{address1Id}}\": \"\",\n\t\"op\":\"op=Save:immediate=false\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/ContactSystemDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"ContactSystemDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with success",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1cec286-f7c6-4141-ae35-18b74e4a5f1f",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].contactSystem[0].fields[0].value === \"The House\"',",
											"    'jsonData.page.elements[1].contactSystem[0].fields[0].hasOwnProperty(\"error\") === false'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"{{address1Id}}\": \"The House\",\n\t\"op\":\"op=Save:immediate=false\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/ContactSystemDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"ContactSystemDetails"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CoverageDetails",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb8491e1-9966-417f-afab-3dcf558538c0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open CoverageDetails page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fa93b02-e838-447e-970b-c6b29d58078d",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"tests[\"Coverage details present\"]=jsonData.page.elements[0].type===\"CoverageDetails\";",
											"tests[\"Two coverages present\"]=jsonData.page.elements[0].coverages.length===2;",
											"",
											"tests[\"Coverage[0] name\"]=jsonData.page.elements[0].coverages[0].name===\"Policy Coverage\";",
											"tests[\"Coverage[0] coverageTypeId\"]=jsonData.page.elements[0].coverages[0].coverageTypeId===\"PolicyCoverageExample\";",
											"tests[\"Coverage[0] limit\"]=jsonData.page.elements[0].coverages[0].limit.includes(\"100,000.00\");",
											"tests[\"Coverage[0] deductible\"]=jsonData.page.elements[0].coverages[0].deductible.includes(\"250.00\");",
											"",
											"tests[\"Coverage[1] name\"]=jsonData.page.elements[0].coverages[1].name===\"Section Coverage\";",
											"tests[\"Coverage[1] coverageTypeId\"]=jsonData.page.elements[0].coverages[1].coverageTypeId===\"SectionCoverageExample\";",
											"tests[\"Coverage[1] limit\"]=jsonData.page.elements[0].coverages[1].limit.includes(\"300,000.00\");",
											"tests[\"Coverage[1] deductible\"]=jsonData.page.elements[0].coverages[1].deductible.includes(\"450.00\");",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/CoverageDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"CoverageDetails"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "SectionScroller",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06e7fa46-a03a-4068-baa7-76cf8c086d23",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success === true\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open SectionScroller2 page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].type === \"SectionScroller\"',",
											"    'jsonData.page.elements[0].sections.length === 1',",
											"    'jsonData.page.elements[0].sections[0].title === \"Test data from POL123 asset \"',",
											"    'jsonData.page.elements[0].sections[0].cells.length === 7'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"addOp\", jsonData.page.elements[0].addOp);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										],
										"id": "ce25ecfe-6eda-40be-bf09-409fdf75377f",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/SectionScroller2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"SectionScroller2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add section",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].type === \"SectionScroller\"',",
											"    'jsonData.page.elements[0].sections.length === 2',",
											"    'jsonData.page.elements[0].sections[0].title === \"Test data from POL123 asset \"',",
											"    'jsonData.page.elements[0].sections[0].cells.length === 7'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[0].sections[1].deleteOp);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										],
										"id": "7b70398d-92b9-40d9-9813-9de1f9f2ecad",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{addOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/SectionScroller2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"SectionScroller2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete row",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].type === \"SectionScroller\"',",
											"    'jsonData.page.elements[0].sections.length === 1',",
											"    'jsonData.page.elements[0].sections[0].title === \"Test data from POL123 asset \"',",
											"    'jsonData.page.elements[0].sections[0].cells.length === 7'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											""
										],
										"id": "5ef1ef1b-99b5-4d71-b2fb-56ab31a23292",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{deleteOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/SectionScroller2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"SectionScroller2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add using newType Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8e083c1-3e11-4c16-abc8-ec7566004447",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].type === \"SectionScroller\"',",
											"    'jsonData.page.elements[0].sections.length === 2',",
											"    'jsonData.page.elements[0].sections[1].cells[0].value === \"new string value\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"newType\": \"SectionScroller2AssetData\",\n  \"c3RyaW5n\": \"new string value\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/SectionScroller2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"SectionScroller2"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PaymentScheduleDetails",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6930c57f-d848-46f1-be82-bcb02f93e86e",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success === true\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open PaymentScheduleDetails page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0d89264-e531-45f4-af31-31fe34bb2511",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.elements[1].saveOp);",
											"postman.setGlobalVariable(\"calculateOp\", jsonData.page.elements[1].schedule.calculateOp);",
											"postman.setGlobalVariable(\"paymentMethod\", jsonData.page.elements[1].elements[2].format.options[0].id);",
											"",
											"todaysDate=new Date().toJSON().substring(0, 10);",
											"",
											"dat=new Date();",
											"dat.setDate(dat.getDate()+1)",
											"postman.setGlobalVariable('paymentStartDate', dat.toJSON().substring(0, 10));",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].type === \"PaymentScheduleDetails\"',",
											"    'jsonData.page.elements[1].elements[0].type == \"Answer\"',",
											"    'jsonData.page.elements[1].elements[0].value.includes(\"120.00\")',",
											"    ",
											"    'jsonData.page.elements[1].elements[1].type == \"Question\"',",
											"    'jsonData.page.elements[1].elements[1].value.includes(\"120.00\")',",
											"    'jsonData.page.elements[1].elements[1].format.type == \"currency\"',",
											"    ",
											"    'jsonData.page.elements[1].elements[2].value == \"DirectDebit: *****054\"',",
											"    'jsonData.page.elements[1].elements[2].format.type == \"choice\"',",
											"    'jsonData.page.elements[1].elements[2].format.options.length == 2',",
											"    'jsonData.page.elements[1].elements[2].format.options[0].value == \"DirectDebit: *****054\"',",
											"    'jsonData.page.elements[1].elements[2].format.options[1].value == \"PaymentCard: **** **** **** 4829\"',",
											"",
											"    'jsonData.page.elements[1].elements[3].format.options.length == 6',",
											"    'jsonData.page.elements[1].elements[3].format.options[0].value == \"ONE_TIME\"',",
											"    'jsonData.page.elements[1].elements[3].format.options[1].value == \"WEEKLY\"',",
											"    'jsonData.page.elements[1].elements[3].format.options[2].value == \"MONTHLY\"',",
											"    'jsonData.page.elements[1].elements[3].format.options[3].value == \"QUARTERLY\"',",
											"    'jsonData.page.elements[1].elements[3].format.options[4].value == \"SEMESTERLY\"',",
											"    'jsonData.page.elements[1].elements[3].format.options[5].value == \"YEARLY\"',",
											"",
											"    'jsonData.page.elements[1].elements[4].type == \"Question\"',",
											"    'jsonData.page.elements[1].elements[4].value == \"'+todaysDate+'\"',",
											"    'jsonData.page.elements[1].elements[4].format.type == \"date\"',",
											"    ",
											"    'jsonData.page.elements[1].elements[5].type == \"Question\"',",
											"    'jsonData.page.elements[1].elements[5].value == \"1\"',",
											"    'jsonData.page.elements[1].elements[5].format.type == \"number\"',",
											"    'jsonData.page.elements[1].elements[5].format.min == 2',",
											"    'jsonData.page.elements[1].elements[5].format.max == 12'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentScheduleDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentScheduleDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Calculate 100.00 in 3 X MONTHLY",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2f7d261-1d6a-47db-b60d-6ca6debebe05",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].schedule.payments.length == 3',",
											"    'jsonData.page.elements[1].schedule.payments[0].amount.includes(\"33.34\")',",
											"    'jsonData.page.elements[1].schedule.payments[1].amount.includes(\"33.33\")',",
											"    'jsonData.page.elements[1].schedule.payments[2].amount.includes(\"33.33\")'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"YW1vdW50\": \"100.00\",\n  \"bWV0aG9k\": \"{{paymentMethod}}\",\n  \"ZnJlcXVlbmN5\": \"MONTHLY\",\n  \"bnVtYmVy\": \"3\",\n  \"ZGF0ZQ\": \"{{paymentStartDate}}\",\n  \"op\": \"{{calculateOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Calculate 500 in 4 X WEEKLY",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c7eebc5-79df-4058-afd4-95964a0cc74a",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].schedule.payments.length == 4',",
											"    'jsonData.page.elements[1].schedule.payments[0].amount.includes(\"125.00\")',",
											"    'jsonData.page.elements[1].schedule.payments[1].amount.includes(\"125.00\")',",
											"    'jsonData.page.elements[1].schedule.payments[2].amount.includes(\"125.00\")',",
											"    'jsonData.page.elements[1].schedule.payments[3].amount.includes(\"125.00\")'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"YW1vdW50\": \"500.00\",\n  \"bWV0aG9k\": \"{{paymentMethod}}\",\n  \"ZnJlcXVlbmN5\": \"WEEKLY\",\n  \"bnVtYmVy\": \"4\",\n  \"ZGF0ZQ\": \"{{paymentStartDate}}\",\n  \"op\": \"{{calculateOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Calculate ONE_TIME",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eabd632d-18ef-42ab-a2e6-119c001235d3",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].schedule.payments.length == 1',",
											"    'jsonData.page.elements[1].schedule.payments[0].amount.includes(\"120.00\")'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"YW1vdW50\": \"120.00\",\n  \"bWV0aG9k\": \"{{paymentMethod}}\",\n  \"ZnJlcXVlbmN5\": \"ONE_TIME\",\n  \"ZGF0ZQ\": \"{{paymentStartDate}}\",\n  \"op\": \"{{calculateOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "NoteRecorder",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c3acf67-44e4-464d-b346-a028f3ba968e",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success === true\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open NoteRecorder page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[2].type === \"NoteRecorder\"',",
											"    'jsonData.page.elements[2].note.noteId.value === -1',",
											"    'jsonData.page.elements[2].note.title.value === \"\"',",
											"    'jsonData.page.elements[2].note.body.value === \"\"',",
											"    'jsonData.page.elements[2].note.type.value === \"\"',",
											"    'jsonData.page.elements[2].note.labels.active.length === 0',",
											"    'jsonData.page.elements[2].note.labels.available.length === 3',",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"noteIdValueId\", jsonData.page.elements[2].note.noteId.valueId);",
											"postman.setGlobalVariable(\"noteIdValue\", jsonData.page.elements[2].note.noteId.value);",
											"postman.setGlobalVariable(\"typeId\", jsonData.page.elements[2].note.type.valueId);",
											"postman.setGlobalVariable(\"titleId\", jsonData.page.elements[2].note.title.valueId);",
											"postman.setGlobalVariable(\"bodyId\", jsonData.page.elements[2].note.body.valueId);",
											""
										],
										"id": "060cfac3-ebf8-40d0-bc4b-29d6fc7570aa",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/NoteRecorder",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"NoteRecorder"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save populated note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[2].type === \"NoteRecorder\"',",
											"    'jsonData.page.elements[2].note.noteId.value > -1',",
											"    'jsonData.page.elements[2].note.title.value === \"Test title\"',",
											"    'jsonData.page.elements[2].note.body.value === \"Test body\"',",
											"    'jsonData.page.elements[2].note.type.value === \"i18n_label_note_general\"',",
											"    'jsonData.page.elements[2].note.labels.active.length === 0',",
											"    'jsonData.page.elements[2].note.labels.available.length === 3'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											""
										],
										"id": "4fd2b10a-7cd4-497c-aded-378e9244d6c5",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{noteIdValueId}}\": \"{{noteIdValue}}\",\n  \"{{typeId}}\": \"i18n_label_note_general\",\n  \"{{titleId}}\": \"Test title\",\n  \"{{bodyId}}\": \"Test body\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/NoteRecorder",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"NoteRecorder"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Labels",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fc43015-77bc-4730-ac42-520d799ff687",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success === true\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open LabelDetails page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"addOp\", jsonData.page.elements[1].addOp);",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[1].deleteOp);",
											"postman.setGlobalVariable(\"valueId\", jsonData.page.elements[1].valueId);",
											"postman.setGlobalVariable(\"litigationId\", jsonData.page.elements[1].available[0].id);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].type === \"LabelDetails\"',",
											"    'jsonData.page.elements[1].available[0].id === \"i18n_label_policy_litigation\"',",
											"    'jsonData.page.elements[1].available[0].value === \"Litigation\"',",
											"    'jsonData.page.elements[1].available[1].id === \"i18n_label_policy_reviewed\"',",
											"    'jsonData.page.elements[1].available[1].value === \"Reviewed\"',",
											"    'jsonData.page.elements[1].available[2].id === \"i18n_label_watch\"',",
											"    'jsonData.page.elements[1].available[2].value === \"Watch\"',",
											"    'jsonData.page.elements[1].active.length === 0'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											""
										],
										"id": "b8fcacef-234f-42f4-8b11-48b2fe5bc808",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/LabelDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"LabelDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add note to Policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"addOp\", jsonData.page.elements[1].addOp);",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[1].deleteOp);",
											"postman.setGlobalVariable(\"valueId\", jsonData.page.elements[1].valueId);",
											"postman.setGlobalVariable(\"litigationId\", jsonData.page.elements[1].available[0].id);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[2].type === \"LabelDetails\"',",
											"    'jsonData.page.elements[2].active.length === 0',",
											"    'jsonData.page.elements[2].available.length === 7',",
											"    'jsonData.page.elements[2].available[0].id === \"i18n_label_note_cancellation_from_outset\"',",
											"    'jsonData.page.elements[2].available[1].id === \"i18n_label_note_cancellation_cooling_off\"',",
											"    'jsonData.page.elements[2].available[2].id === \"i18n_label_note_general\"',",
											"    'jsonData.page.elements[2].available[3].id === \"i18n_label_note_cancellation_non_disclosure\"',",
											"    'jsonData.page.elements[2].available[4].id === \"i18n_label_note_cancellation_other\"',",
											"    'jsonData.page.elements[2].available[5].id === \"i18n_label_note_cancellation_other_policy\"',",
											"    'jsonData.page.elements[2].available[6].id === \"i18n_label_note_watch_reason\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											""
										],
										"id": "3de4b03b-1123-446c-8bcf-41f95e7d5c71",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/LabelDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"LabelDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add litigation label",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"addOp\", jsonData.page.elements[1].addOp);",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[1].deleteOp);",
											"postman.setGlobalVariable(\"valueId\", jsonData.page.elements[1].valueId);",
											"postman.setGlobalVariable(\"litigationId\", jsonData.page.elements[1].active[0].id);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].type === \"LabelDetails\"',",
											"    'jsonData.page.elements[1].active.length === 1',",
											"    'jsonData.page.elements[1].active[0].id === \"i18n_label_policy_litigation\"',",
											"    'jsonData.page.elements[1].active[0].value === \"Litigation\"',",
											"    'jsonData.page.elements[1].available.length === 3',",
											"    'jsonData.page.elements[1].available[0].id === \"i18n_label_policy_litigation\"',",
											"    'jsonData.page.elements[1].available[0].value === \"Litigation\"',",
											"    'jsonData.page.elements[1].available[1].id === \"i18n_label_policy_reviewed\"',",
											"    'jsonData.page.elements[1].available[1].value === \"Reviewed\"',",
											"    'jsonData.page.elements[1].available[2].id === \"i18n_label_watch\"',",
											"    'jsonData.page.elements[1].available[2].value === \"Watch\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											""
										],
										"id": "1f724cf5-734f-494e-ba32-176712af0092",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{addOp}}\",\n  \"{{valueId}}\": \"{{litigationId}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/LabelDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"LabelDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete litigation label",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"addOp\", jsonData.page.elements[1].addOp);",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[1].deleteOp);",
											"postman.setGlobalVariable(\"valueId\", jsonData.page.elements[1].valueId);",
											"postman.setGlobalVariable(\"litigationId\", jsonData.page.elements[1].available[0].id);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].type === \"LabelDetails\"',",
											"    'jsonData.page.elements[1].active.length === 0',",
											"    'jsonData.page.elements[1].available.length === 3',",
											"    'jsonData.page.elements[1].available[0].id === \"i18n_label_policy_litigation\"',",
											"    'jsonData.page.elements[1].available[0].value === \"Litigation\"',",
											"    'jsonData.page.elements[1].available[1].id === \"i18n_label_policy_reviewed\"',",
											"    'jsonData.page.elements[1].available[1].value === \"Reviewed\"',",
											"    'jsonData.page.elements[1].available[2].id === \"i18n_label_watch\"',",
											"    'jsonData.page.elements[1].available[2].value === \"Watch\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											""
										],
										"id": "c1eb6550-16fd-4744-92b1-0a68d431ee55",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{deleteOp}}\",\n  \"{{valueId}}\": \"{{litigationId}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/LabelDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"LabelDetails"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Answer",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0c52784-63fb-4e5c-a627-e5ecffc9dd9c",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success\"] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open Answer page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c805790d-43df-41ce-9427-5a2a7bca23d7",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['jsonData.page.elements[1].answers[0].clientHint===\"my-render-hint\"'] = jsonData.page.elements[1].answers[0].clientHint===\"my-render-hint\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[4]);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/Answer",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"Answer"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PaymentHolidayDetails",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open PaymentHolidayDetails page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].title === \"Current Payment Holiday\"'] = jsonData.page.elements[0].title === \"Current Payment Holiday\";",
											"tests['page.elements[0].paymentHolidays.length === 0'] = jsonData.page.elements[0].paymentHolidays.length === 0;",
											"",
											"tests['page.elements[1].title === \"Previous Payment Holidays\"'] = jsonData.page.elements[1].title === \"Previous Payment Holidays\";",
											"tests['page.elements[1].paymentHolidays.length === 0'] = jsonData.page.elements[1].paymentHolidays.length === 0;",
											"",
											"tests['page.elements[2].title === \"All Payment Holidays\"'] = jsonData.page.elements[2].title === \"All Payment Holidays\";",
											"tests['page.elements[2].paymentHolidays.length === 0'] = jsonData.page.elements[1].paymentHolidays.length === 0;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"paymentHolidayAddOp\", jsonData.page.elements[0].addOp);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add PaymentHoliday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 1'] = jsonData.page.elements[0].paymentHolidays.length === 1;",
											"tests['page.elements[0].paymentHolidays[0].duration.value === \"\"'] = jsonData.page.elements[0].paymentHolidays[0].duration === \"\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId\", jsonData.page.elements[0].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId\", jsonData.page.elements[0].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{paymentHolidayAddOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save updated start and end dates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var startDateValue=postman.getGlobalVariable(\"startDateValue\");",
											"var endDateValue=postman.getGlobalVariable(\"endDateValue\");",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 1'] = jsonData.page.elements[0].paymentHolidays.length === 1;",
											"tests['page.elements[0].paymentHolidays[0].startDate.value.startsWith(\"'+startDateValue+'\")'] = jsonData.page.elements[0].paymentHolidays[0].startDate.value.startsWith(startDateValue);",
											"tests['page.elements[0].paymentHolidays[0].endDate.value.startsWith(\"'+endDateValue+'\")'] = jsonData.page.elements[0].paymentHolidays[0].endDate.value.startsWith(endDateValue);",
											"tests['page.elements[0].paymentHolidays[0].duration === \"1 month 1 day\"'] = jsonData.page.elements[0].paymentHolidays[0].duration === \"1 month 1 day\";",
											"",
											"tests['page.elements[1].paymentHolidays.length === 0'] = jsonData.page.elements[1].paymentHolidays.length === 0;",
											"tests['page.elements[1].readOnly === \"readOnly\"'] = jsonData.page.elements[1].readOnly === true;",
											"",
											"tests['page.elements[2].paymentHolidays.length === 1'] = jsonData.page.elements[2].paymentHolidays.length === 1;",
											"tests['page.elements[2].readOnly === \"readOnly\"'] = jsonData.page.elements[1].readOnly === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[0].paymentHolidays[0].deleteOp);",
											""
										],
										"id": "5b3101fa-daf7-438d-9421-9240795e77ef",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+1);",
											"postman.setGlobalVariable('startDateValue', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+1);",
											"postman.setGlobalVariable('endDateValue', dat.toJSON().substring(0, 10));",
											""
										],
										"id": "bfc79b5e-cd72-4c68-89d9-35cde40fd524",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{startDateValueId}}\": \"{{startDateValue}}\",\n  \"{{endDateValueId}}\": \"{{endDateValue}}\",\n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete PaymentHoliday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 0'] = jsonData.page.elements[0].paymentHolidays.length === 0;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{deleteOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add PaymentHoliday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 1'] = jsonData.page.elements[0].paymentHolidays.length === 1;",
											"tests['page.elements[0].paymentHolidays[0].duration.value === \"\"'] = jsonData.page.elements[0].paymentHolidays[0].duration === \"\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId\", jsonData.page.elements[0].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId\", jsonData.page.elements[0].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{paymentHolidayAddOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with null start and end dates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 1'] = jsonData.page.elements[0].paymentHolidays.length === 1;",
											"tests['page.elements[0].paymentHolidays[0].startDate.error === \"required\"'] = jsonData.page.elements[0].paymentHolidays[0].startDate.error === \"required\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId\", jsonData.page.elements[0].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId\", jsonData.page.elements[0].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with invalid end date format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 1'] = jsonData.page.elements[0].paymentHolidays.length === 1;",
											"tests['page.elements[0].paymentHolidays[0].startDate.hasOwnProperty(\"error\") === false'] = jsonData.page.elements[0].paymentHolidays[0].startDate.hasOwnProperty(\"error\") === false;",
											"tests['page.elements[0].paymentHolidays[0].endDate.error === \"invalid\"'] = jsonData.page.elements[0].paymentHolidays[0].endDate.error === \"invalid\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[0].paymentHolidays[0].deleteOp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{startDateValueId}}\": \"2010-10-10\",\n  \"{{endDateValueId}}\": \"hello\",\n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with invalid start date format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 1'] = jsonData.page.elements[0].paymentHolidays.length === 1;",
											"tests['page.elements[0].paymentHolidays[0].startDate.error === \"invalid\"'] = jsonData.page.elements[0].paymentHolidays[0].startDate.error === \"invalid\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[0].paymentHolidays[0].deleteOp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{startDateValueId}}\": \"hello\",\n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete PaymentHoliday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 0'] = jsonData.page.elements[0].paymentHolidays.length === 0;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{deleteOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add PaymentHoliday[0]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 1'] = jsonData.page.elements[0].paymentHolidays.length === 1;",
											"tests['page.elements[0].paymentHolidays[0].duration.value === \"\"'] = jsonData.page.elements[0].paymentHolidays[0].duration === \"\";",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{paymentHolidayAddOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add PaymentHoliday[1]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 2'] = jsonData.page.elements[0].paymentHolidays.length === 2;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId1\", jsonData.page.elements[0].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId1\", jsonData.page.elements[0].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"startDateValueId2\", jsonData.page.elements[0].paymentHolidays[1].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId2\", jsonData.page.elements[0].paymentHolidays[1].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{paymentHolidayAddOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with no overlap",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 2'] = jsonData.page.elements[0].paymentHolidays.length === 2;",
											"tests['page.elements[0].paymentHolidays[0].hasOwnProperty(\"error\") === false'] = jsonData.page.elements[0].paymentHolidays[0].hasOwnProperty(\"error\") === false;",
											"tests['page.elements[0].paymentHolidays[1].hasOwnProperty(\"error\") === false'] = jsonData.page.elements[0].paymentHolidays[1].hasOwnProperty(\"error\") === false;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId\", jsonData.page.elements[2].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId\", jsonData.page.elements[2].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+1);",
											"postman.setGlobalVariable('startDateValue1', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+2);",
											"postman.setGlobalVariable('endDateValue1', dat.toJSON().substring(0, 10));",
											"",
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+3);",
											"postman.setGlobalVariable('startDateValue2', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+4);",
											"postman.setGlobalVariable('endDateValue2', dat.toJSON().substring(0, 10));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{startDateValueId1}}\": \"{{startDateValue1}}\",\n  \"{{endDateValueId1}}\": \"{{endDateValue1}}\",\n  \n  \"{{startDateValueId2}}\": \"{{startDateValue2}}\",\n  \"{{endDateValueId2}}\": \"{{endDateValue2}}\",\n  \n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with right-hand overlap",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 2'] = jsonData.page.elements[0].paymentHolidays.length === 2;",
											"tests['page.elements[0].paymentHolidays[0].error === \"Periods overlap\"'] = jsonData.page.elements[0].paymentHolidays[0].error === \"Periods overlap\";",
											"tests['page.elements[0].paymentHolidays[1].error === \"Periods overlap\"'] = jsonData.page.elements[0].paymentHolidays[1].error === \"Periods overlap\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId1\", jsonData.page.elements[0].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId1\", jsonData.page.elements[0].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"startDateValueId2\", jsonData.page.elements[0].paymentHolidays[1].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId2\", jsonData.page.elements[0].paymentHolidays[1].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+2);",
											"postman.setGlobalVariable('startDateValue1', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+4);",
											"postman.setGlobalVariable('endDateValue1', dat.toJSON().substring(0, 10));",
											"",
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+3);",
											"postman.setGlobalVariable('startDateValue2', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+5);",
											"postman.setGlobalVariable('endDateValue2', dat.toJSON().substring(0, 10));",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{startDateValueId1}}\": \"{{startDateValue1}}\",\n  \"{{endDateValueId1}}\": \"{{endDateValue1}}\",\n  \n  \"{{startDateValueId2}}\": \"{{startDateValue2}}\",\n  \"{{endDateValueId2}}\": \"{{endDateValue2}}\",\n  \n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with contained overlap",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 2'] = jsonData.page.elements[0].paymentHolidays.length === 2;",
											"tests['page.elements[0].paymentHolidays[0].error === \"Periods overlap\"'] = jsonData.page.elements[0].paymentHolidays[0].error === \"Periods overlap\";",
											"tests['page.elements[0].paymentHolidays[1].error === \"Periods overlap\"'] = jsonData.page.elements[0].paymentHolidays[1].error === \"Periods overlap\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId1\", jsonData.page.elements[0].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId1\", jsonData.page.elements[0].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"startDateValueId2\", jsonData.page.elements[0].paymentHolidays[1].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId2\", jsonData.page.elements[0].paymentHolidays[1].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+2);",
											"postman.setGlobalVariable('startDateValue1', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+5);",
											"postman.setGlobalVariable('endDateValue1', dat.toJSON().substring(0, 10));",
											"",
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+3);",
											"postman.setGlobalVariable('startDateValue2', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+4);",
											"postman.setGlobalVariable('endDateValue2', dat.toJSON().substring(0, 10));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{startDateValueId1}}\": \"{{startDateValue1}}\",\n  \"{{endDateValueId1}}\": \"{{endDateValue1}}\",\n  \n  \"{{startDateValueId2}}\": \"{{startDateValue2}}\",\n  \"{{endDateValueId2}}\": \"{{endDateValue2}}\",\n  \n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with left-hand overlap",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[0].paymentHolidays.length === 2'] = jsonData.page.elements[0].paymentHolidays.length === 2;",
											"tests['page.elements[0].paymentHolidays[0].error === \"Periods overlap\"'] = jsonData.page.elements[0].paymentHolidays[0].error === \"Periods overlap\";",
											"tests['page.elements[0].paymentHolidays[1].error === \"Periods overlap\"'] = jsonData.page.elements[0].paymentHolidays[1].error === \"Periods overlap\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId1\", jsonData.page.elements[0].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId1\", jsonData.page.elements[0].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"startDateValueId2\", jsonData.page.elements[0].paymentHolidays[1].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId2\", jsonData.page.elements[0].paymentHolidays[1].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+2);",
											"postman.setGlobalVariable('startDateValue1', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+4);",
											"postman.setGlobalVariable('endDateValue1', dat.toJSON().substring(0, 10));",
											"",
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()+1);",
											"postman.setGlobalVariable('startDateValue2', dat.toJSON().substring(0, 10));",
											"dat.setMonth(dat.getMonth()+3);",
											"postman.setGlobalVariable('endDateValue2', dat.toJSON().substring(0, 10));",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{startDateValueId1}}\": \"{{startDateValue1}}\",\n  \"{{endDateValueId1}}\": \"{{endDateValue1}}\",\n  \n  \"{{startDateValueId2}}\": \"{{startDateValue2}}\",\n  \"{{endDateValueId2}}\": \"{{endDateValue2}}\",\n  \n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PaymentHolidayDetails ValidationFailureRollback",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/ValidationFailurePageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"ValidationFailurePageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open PaymentHolidayDetails page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2d4754b-23c6-48fc-bd7a-724a3a042065",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].title === \"All Payment Holidays\"',",
											"    'jsonData.page.elements[0].paymentHolidays.length === 0',",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"paymentHolidayAddOp\", jsonData.page.elements[0].addOp);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/ValidationFailurePageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"ValidationFailurePageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add PaymentHoliday",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "edbe264e-8310-4381-8498-9679c2c59a64",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].paymentHolidays.length === 1',",
											"    'jsonData.page.elements[0].paymentHolidays[0].duration === \"\"',",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"startDateValueId\", jsonData.page.elements[0].paymentHolidays[0].startDate.valueId);",
											"postman.setGlobalVariable(\"endDateValueId\", jsonData.page.elements[0].paymentHolidays[0].endDate.valueId);",
											"postman.setGlobalVariable(\"saveOp\", jsonData.page.navigation[0].operations[0].op);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{paymentHolidayAddOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/ValidationFailurePageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"ValidationFailurePageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save with invalid end date (should error but no persist)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "21acf4a2-b236-49e3-9602-ea83a1a53fea",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].paymentHolidays.length === 1',",
											"    'jsonData.page.elements[0].paymentHolidays[0].startDate.hasOwnProperty(\"error\") === false',",
											"    'jsonData.page.elements[0].paymentHolidays[0].endDate.error === \"invalid\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[0].paymentHolidays[0].deleteOp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{startDateValueId}}\": \"2010-10-10\",\n  \"{{endDateValueId}}\": \"hello\",\n  \"op\": \"{{saveOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/ValidationFailurePageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"ValidationFailurePageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify PaymentHoliday was not persisted",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96cb82ca-57d4-4efb-9846-ef0888949deb",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].title === \"All Payment Holidays\"',",
											"    'jsonData.page.elements[0].paymentHolidays.length === 1',",
											"    'jsonData.page.elements[0].paymentHolidays[0].startDate.value === \"\"',",
											"    'jsonData.page.elements[0].paymentHolidays[0].startDate.hasOwnProperty(\"error\") === true',",
											"    'jsonData.page.elements[0].paymentHolidays[0].endDate.value === \"\"',",
											"    'jsonData.page.elements[0].paymentHolidays[0].endDate.hasOwnProperty(\"error\") === false'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"paymentHolidayAddOp\", jsonData.page.elements[0].addOp);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/ValidationFailurePageFlow/policy/{{policyId}}/page/PaymentHolidayDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"ValidationFailurePageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"PaymentHolidayDetails"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "AccountDetails",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open AccountDetails page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var page=jsonData.page;",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"tests['page.elements[1].type === \"AccountDetails\"'] = page.elements[1].type === \"AccountDetails\";",
											"tests['page.elements[1].title === \"Broker\\'s account\"'] = page.elements[1].title === \"Broker\\'s account\"",
											"",
											"tests['page.elements[2].type === \"AccountDetails\"'] = page.elements[2].type === \"AccountDetails\";",
											"tests['page.elements[2].title === \"Client\\'s account statement\"'] = page.elements[2].title === \"Client\\'s account statement\";",
											"",
											"tests['page.elements[3].type === \"AccountDetails\"'] = page.elements[3].type === \"AccountDetails\";",
											"tests['page.elements[3].title === \"Client\\'s actualized payment schedule\"'] = page.elements[3].title === \"Client\\'s actualized payment schedule\";",
											"",
											"tests['page.elements[4].type === \"AccountDetails\"'] = page.elements[4].type === \"AccountDetails\";",
											"tests['page.elements[5].title === \"Client\\'s normalized payment schedule\"'] = page.elements[4].title === \"Client\\'s normalized payment schedule\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"createPaymentScheduleAndAccountsOp\", page.elements[5].elements[1].op);",
											"postman.setGlobalVariable(\"postTransaction\", page.navigation[0].operations[1].op);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/AccountDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"AccountDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create payment schedule and accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2292b700-0084-449c-a99c-95c7584d5c08",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var page=jsonData.page;",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"tests['page.elements[1].type === \"AccountDetails\"'] = page.elements[1].type === \"AccountDetails\";",
											"tests['page.elements[1].accounts.length === 1'] = page.elements[1].accounts.length === 1;",
											"tests['page.elements[1].accounts[0].type === \"CASH\"'] = page.elements[1].accounts[0].type === \"CASH\";",
											"tests['page.elements[1].accounts[0].createdDate === \"2000-01-01T00:00:00\"'] = page.elements[1].accounts[0].createdDate === \"2000-01-01T00:00:00\";",
											"tests['page.elements[1].accounts[0].name === \"\"'] = page.elements[1].accounts[0].name === \"\";",
											"tests['page.elements[1].accounts[0].currency === \"GBP\"'] = page.elements[1].accounts[0].currency === \"GBP\";",
											"tests['page.elements[1].accounts[0].status === \"OPEN\"'] = page.elements[1].accounts[0].status === \"OPEN\";",
											"tests['page.elements[1].accounts[0].description === \"\"'] = page.elements[1].accounts[0].description === \"\";",
											"tests['page.elements[1].accounts[0].balance === \"£0.00\"'] = page.elements[1].accounts[0].balance.includes(\"0.00\");",
											"",
											"tests['page.elements[2].type === \"AccountDetails\"'] = page.elements[1].type === \"AccountDetails\";",
											"tests['page.elements[2].accounts.length === 1'] = page.elements[1].accounts.length === 1;",
											"tests['page.elements[2].accounts[0].type === \"CASH\"'] = page.elements[1].accounts[0].type === \"CASH\";",
											"tests['page.elements[2].accounts[0].createdDate === \"2000-01-01T00:00:00\"'] = page.elements[1].accounts[0].createdDate === \"2000-01-01T00:00:00\";",
											"tests['page.elements[2].accounts[0].name === \"\"'] = page.elements[1].accounts[0].name === \"\";",
											"tests['page.elements[2].accounts[0].currency === \"GBP\"'] = page.elements[1].accounts[0].currency === \"GBP\";",
											"tests['page.elements[2].accounts[0].status === \"OPEN\"'] = page.elements[1].accounts[0].status === \"OPEN\";",
											"tests['page.elements[2].accounts[0].description === \"\"'] = page.elements[1].accounts[0].description === \"\";",
											"tests['page.elements[2].accounts[0].balance === \"£0.00\"'] = page.elements[1].accounts[0].balance.includes(\"0.00\");",
											"tests['page.elements[2].accounts[0].statement.length === 0'] = page.elements[2].accounts[0].statement.length === 0;",
											"//",
											"tests['page.elements[3].type === \"AccountDetails\"'] = page.elements[3].type === \"AccountDetails\";",
											"tests['page.elements[3].schedule.type === \"UNDEFINED\"'] = page.elements[3].schedule.type === \"UNDEFINED\";",
											"tests['page.elements[3].schedule.description === \"Actualized payment schedule\"'] = page.elements[3].schedule.description === \"Actualized payment schedule\";",
											"tests['page.elements[3].schedule.moneyProvisions.length === 3'] = page.elements[3].schedule.moneyProvisions.length === 3;",
											"",
											"for(var i=0 ; i<3 ; i++) {",
											"    tests['page.elements[3].schedule.moneyProvisions['+i+'].paymentMethod === \"DirectDebit\"'] = page.elements[3].schedule.moneyProvisions[i].paymentMethod === \"DirectDebit\";",
											"    tests['page.elements[3].schedule.moneyProvisions['+i+'].number === \"0\"'] = page.elements[3].schedule.moneyProvisions[i].number === \"0\";",
											"    tests['page.elements[3].schedule.moneyProvisions['+i+'].description.matche(DirectDebit of .*50.00 for Monthly payment)'] = page.elements[3].schedule.moneyProvisions[i].description.match(/DirectDebit of .*50.00 for Monthly payment/);",
											"    tests['page.elements[3].schedule.moneyProvisions['+i+'].frequency === \"ONE_TIME\"'] = page.elements[3].schedule.moneyProvisions[i].frequency === \"ONE_TIME\";",
											"    tests['page.elements[3].schedule.moneyProvisions['+i+'].day === \"-1\"'] = page.elements[3].schedule.moneyProvisions[i].day === \"-1\";",
											"    tests['page.elements[3].schedule.moneyProvisions['+i+'].status === \"NEW\"'] = page.elements[3].schedule.moneyProvisions[i].status === \"NEW\";",
											"    tests['page.elements[3].schedule.moneyProvisions['+i+'].amount === \"£50.00\"'] = page.elements[3].schedule.moneyProvisions[i].amount.includes(\"50.00\");",
											"}",
											"",
											"tests['page.elements[4].schedule.moneyProvisions[0].paymentsEndDate === \"\"'] = page.elements[4].schedule.moneyProvisions[0].paymentsEndDate === \"\";",
											"tests['page.elements[4].schedule.moneyProvisions[0].paymentMethod === \"DirectDebit\"'] = page.elements[4].schedule.moneyProvisions[0].paymentMethod === \"DirectDebit\";",
											"tests['page.elements[4].schedule.moneyProvisions[0].number === \"1\"'] = page.elements[4].schedule.moneyProvisions[0].number === \"1\";",
											"tests['page.elements[4].schedule.moneyProvisions[0].description === \"Monthly payment\"'] = page.elements[4].schedule.moneyProvisions[0].description === \"Monthly payment\";",
											"tests['page.elements[4].schedule.moneyProvisions[0].frequency === \"MONTHLY\"'] = page.elements[4].schedule.moneyProvisions[0].frequency === \"MONTHLY\";",
											"tests['page.elements[4].schedule.moneyProvisions[0].day === \"5\"'] = page.elements[4].schedule.moneyProvisions[0].day === \"5\";",
											"tests['page.elements[4].schedule.moneyProvisions[0].status === \"NEW\"'] = page.elements[4].schedule.moneyProvisions[0].status === \"NEW\";",
											"tests['page.elements[4].schedule.moneyProvisions[0].amount === \"£50.00\"'] = page.elements[4].schedule.moneyProvisions[0].amount.includes(\"50.00\");",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{createPaymentScheduleAndAccountsOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open Post Transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var page=jsonData.page;",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()-1);",
											"postman.setEnvironmentVariable('transactionDate', dat.getDate()+\"/\"+(dat.getMonth()-1)+\"/\"+dat.getFullYear());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{postTransaction}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create transaction 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var page=jsonData.page;",
											"",
											"tests['success === true'] = jsonData.success === true;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()-1);",
											"postman.setEnvironmentVariable('transactionDate', (dat.getDate()+1)+\"/\"+(dat.getMonth()-1)+\"/\"+dat.getFullYear());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"op=Post transaction:immediate=false\",\n  \"L2Fzc2V0W2lkPSdhY2NvdW50RGV0YWlscyddL2F0dHJpYnV0ZVtpZD0nYW1vdW50J10\": \"£500.00\",\n  \"L2Fzc2V0W2lkPSdhY2NvdW50RGV0YWlscyddL2F0dHJpYnV0ZVtpZD0nZGlyZWN0aW9uJ10\": \"Client to Broker\",\n  \"L2Fzc2V0W2lkPSdhY2NvdW50RGV0YWlscyddL2F0dHJpYnV0ZVtpZD0nZGF0ZSdd\": \"{{transactionDate}}\",\n  \"L2Fzc2V0W2lkPSdhY2NvdW50RGV0YWlscyddL2F0dHJpYnV0ZVtpZD0nZGVzY3JpcHRpb24nXQ\": \"Premium Payment\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open Post Transaction copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var page=jsonData.page;",
											"",
											"tests['success === true'] = jsonData.success === true;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()-1);",
											"postman.setEnvironmentVariable('transactionDate', dat.getDate()+\"/\"+(dat.getMonth()-1)+\"/\"+dat.getFullYear());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{postTransaction}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create transaction 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var page=jsonData.page;",
											"",
											"tests['success === true'] = jsonData.success === true;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"dat=new Date();",
											"dat.setMonth(dat.getMonth()-1);",
											"postman.setEnvironmentVariable('transactionDate', (dat.getDate()+2)+\"/\"+(dat.getMonth()-1)+\"/\"+dat.getFullYear());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"op=Post transaction:immediate=false\",\n  \"L2Fzc2V0W2lkPSdhY2NvdW50RGV0YWlscyddL2F0dHJpYnV0ZVtpZD0nYW1vdW50J10\": \"£100.00\",\n  \"L2Fzc2V0W2lkPSdhY2NvdW50RGV0YWlscyddL2F0dHJpYnV0ZVtpZD0nZGlyZWN0aW9uJ10\": \"Broker to Client\",\n  \"L2Fzc2V0W2lkPSdhY2NvdW50RGV0YWlscyddL2F0dHJpYnV0ZVtpZD0nZGF0ZSdd\": \"{{transactionDate}}\",\n  \"L2Fzc2V0W2lkPSdhY2NvdW50RGV0YWlscyddL2F0dHJpYnV0ZVtpZD0nZGVzY3JpcHRpb24nXQ\": \"Premium Refund\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reopen AccountDetails",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4cd688cd-6505-475d-a118-36efb76fe362",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var page=jsonData.page;",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"// Broker's account",
											"tests['page.elements[1].accounts[0].balance.includes(\"400.00\")'] = page.elements[1].accounts[0].balance.includes(\"400.00\");",
											"",
											"tests['page.elements[1].accounts[0].statement[0].description === \"Premium Payment\"'] = page.elements[1].accounts[0].statement[0].description === \"Premium Payment\";",
											"tests['page.elements[1].accounts[0].statement[0].type === \"PREMIUM\"'] = page.elements[1].accounts[0].statement[0].type === \"PREMIUM\";",
											"tests['page.elements[1].accounts[0].statement[0].transactionType === \"CREDIT\"'] = page.elements[1].accounts[0].statement[0].transactionType === \"CREDIT\";",
											"tests['page.elements[1].accounts[0].statement[0].amount.includes(\"500.00\")'] = page.elements[1].accounts[0].statement[0].amount.includes(\"500.00\");",
											"",
											"tests['page.elements[1].accounts[0].statement[1].description === \"Premium Refund\"'] = page.elements[1].accounts[0].statement[1].description === \"Premium Refund\";",
											"tests['page.elements[1].accounts[0].statement[1].type === \"PREMIUM\"'] = page.elements[1].accounts[0].statement[1].type === \"PREMIUM\";",
											"tests['page.elements[1].accounts[0].statement[1].transactionType === \"DEBIT\"'] = page.elements[1].accounts[0].statement[1].transactionType === \"DEBIT\";",
											"tests['page.elements[1].accounts[0].statement[1].amount.includes(\"100.00\")'] = page.elements[1].accounts[0].statement[1].amount.includes(\"100.00\");",
											"",
											"// Client's account",
											"tests['page.elements[2].accounts[0].balanc.includes(\"400.00\")'] = page.elements[1].accounts[0].balance.includes(\"400.00\");",
											"",
											"tests['page.elements[2].accounts[0].statement[0].description === \"Premium Payment\"'] = page.elements[2].accounts[0].statement[0].description === \"Premium Payment\";",
											"tests['page.elements[2].accounts[0].statement[0].type === \"PREMIUM\"'] = page.elements[2].accounts[0].statement[0].type === \"PREMIUM\";",
											"tests['page.elements[2].accounts[0].statement[0].transactionType === \"DEBIT\"'] = page.elements[2].accounts[0].statement[0].transactionType === \"DEBIT\";",
											"tests['page.elements[2].accounts[0].statement[0].amount.includes(\"500.00\")'] = page.elements[2].accounts[0].statement[0].amount.includes(\"500.00\");",
											"",
											"tests['page.elements[2].accounts[0].statement[1].description === \"Premium Refund\"'] = page.elements[2].accounts[0].statement[1].description === \"Premium Refund\";",
											"tests['page.elements[2].accounts[0].statement[1].type === \"PREMIUM\"'] = page.elements[2].accounts[0].statement[1].type === \"PREMIUM\";",
											"tests['page.elements[2].accounts[0].statement[1].transactionType === \"CREDIT\"'] = page.elements[2].accounts[0].statement[1].transactionType === \"CREDIT\";",
											"tests['page.elements[2].accounts[0].statement[1].amount.includes(\"100.00\")'] = page.elements[2].accounts[0].statement[1].amount.includes(\"100.00\");",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/AccountDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"AccountDetails"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "NoteDetails",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"success === true\"] = jsonData.success === true;",
											"tests[\"Content-Type === 'application/json;charset=UTF-8'\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										],
										"id": "4bed6836-0db9-4e7e-9905-eac73a69c021",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open NoteDetails page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"success === true\"] = jsonData.success === true;",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											"",
											"tests['page.elements[1].type===\"NoteDetails\"'] = jsonData.page.elements[1].type===\"NoteDetails\";",
											"",
											"postman.setGlobalVariable(\"noteDetalsAddOp\", jsonData.page.elements[1].addOp)",
											"",
											"",
											"",
											""
										],
										"id": "4604ba4c-07c5-4a95-b4c0-7c059d3ecaef",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/NoteDetails",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"NoteDetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a new note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].notes.length === 1',",
											"    'jsonData.page.elements[1].notes[0].title.value === \"\"',",
											"    'jsonData.page.elements[1].notes[0].body.value === \"\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"titleId\", jsonData.page.elements[1].notes[0].title.valueId);",
											"postman.setGlobalVariable(\"bodyId\", jsonData.page.elements[1].notes[0].body.valueId);",
											"",
											""
										],
										"id": "4da8a80b-e9fc-44aa-87b0-8405b17e2a17",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\":\"{{noteDetalsAddOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update note's title & body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].notes.length===1',",
											"    'jsonData.page.elements[1].notes[0].title.value===\"New Note Title\"',",
											"    'jsonData.page.elements[1].notes[0].body.value===\"Body text for the new note.\"',",
											"    'jsonData.page.elements[1].notes[0].createdBy===\"adam\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"titleId\", jsonData.page.elements[1].notes[0].titleId);",
											"postman.setGlobalVariable(\"bodyId\", jsonData.page.elements[1].notes[0].bodyId);",
											"postman.setGlobalVariable(\"addOp\", jsonData.page.elements[1].addOp);",
											"",
											""
										],
										"id": "14da95b2-6d54-4577-8b2d-9d9f3c94e4bd",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"{{titleId}}\": \"New Note Title\",\n  \"{{bodyId}}\": \"Body text for the new note.\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a second new note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].notes.length===2',",
											"    'jsonData.page.elements[1].notes[0].title.value===\"New Note Title\"',",
											"    'jsonData.page.elements[1].notes[0].body.value===\"Body text for the new note.\"',",
											"    'jsonData.page.elements[1].notes[1].title.value===\"\"',",
											"    'jsonData.page.elements[1].notes[1].body.value===\"\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"noteId\", jsonData.page.elements[1].id);",
											"postman.setGlobalVariable(\"noteDetailsDeleteOp\", jsonData.page.elements[1].notes[0].deleteOp);",
											"",
											"",
											"",
											""
										],
										"id": "d0b50915-95d8-4ecd-819c-cb2da6477315",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{noteDetalsAddOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete first note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[1].notes.length===1',",
											"    'jsonData.page.elements[1].notes[0].title.value===\"\"',",
											"    'jsonData.page.elements[1].notes[0].body.value===\"\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										],
										"id": "3aadf61d-d9f1-4a18-a64c-3ac19c94c325",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "op",
											"type": "text",
											"value": "{{noteDetailsDeleteOp}}"
										}
									]
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/{{action}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"{{action}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "RowScroller",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c3d8f27-614f-4cd1-8192-e5fdcc0c9208",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open RowScroller2 page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9e9b21b-29b1-49a6-b898-711eca9fec9e",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].type === \"RowScroller\"',",
											"    'jsonData.page.elements[0].columns.length === 8',",
											"    'jsonData.page.elements[0].rows.length === 1',",
											"    'jsonData.page.elements[0].rows[0].cells.length === 8'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"addOp\", jsonData.page.elements[0].addOp);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/RowScroller2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"RowScroller2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add row",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44f4c1ec-e2fd-40de-bd0e-88c73d0eea73",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].type === \"RowScroller\"',",
											"    'jsonData.page.elements[0].columns.length === 8',",
											"    'jsonData.page.elements[0].rows.length === 2',",
											"    'jsonData.page.elements[0].rows[0].cells.length === 8'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"deleteOp\", jsonData.page.elements[0].rows[1].deleteOp);",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{addOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/RowScroller2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"RowScroller2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete row",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "209df8a3-a16c-4643-9555-088d824b387a",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].type === \"RowScroller\"',",
											"    'jsonData.page.elements[0].columns.length === 8',",
											"    'jsonData.page.elements[0].rows.length === 1',",
											"    'jsonData.page.elements[0].rows[0].cells.length === 8'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{deleteOp}}\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/RowScroller2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"RowScroller2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add using newType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1268f5e6-37f1-4e88-8d36-ab28d16cc652",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.elements[0].type === \"RowScroller\"',",
											"    'jsonData.page.elements[0].columns.length === 8',",
											"    'jsonData.page.elements[0].rows.length === 2',",
											"    'jsonData.page.elements[0].rows[1].cells[0].value === \"new string value\"'",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8aa0c78d-7879-4a8b-9907-9b831dabce3b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"newType\": \"RowScroller2AssetData\",\n  \"c3RyaW5n\": \"new string value\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/RowScroller2",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"RowScroller2"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DocumentManager",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open DocumentManager page (no docs)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "46e8ff97-1551-48c2-ac18-a7c46740fbc9",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"tests['page.elements[1].documents.length === 0'] = jsonData.page.elements[1].documents.length === 0;",
											"tests['page.elements[1].documentPlaceholders.length === 0'] = jsonData.page.elements[1].documentPlaceholders.length === 0;",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/DocumentManager",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"DocumentManager"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open DocumentManager page (no docs) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "46e8ff97-1551-48c2-ac18-a7c46740fbc9",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"tests['page.elements[1].documents.length === 0'] = jsonData.page.elements[1].documents.length === 0;",
											"tests['page.elements[1].documentPlaceholders.length === 0'] = jsonData.page.elements[1].documentPlaceholders.length === 0;",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/DocumentManager",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"DocumentManager"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CustomLetterBuilder",
					"description": null,
					"item": [
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open CustomLetterBuilder page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0426de5-c276-4808-9240-47c081020f05",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var asserts = [",
											"    'jsonData.success === true',",
											"    'jsonData.page.title === \"CustomLetterBuilder\"',",
											"    'jsonData.page.elements[0].elements.length === 4',",
											"    'jsonData.page.elements[0].elements[0].type === \"Question\"',",
											"    'jsonData.page.elements[0].elements[0].title === \"Document Type\"',",
											"    'jsonData.page.elements[0].elements[0].format.type === \"choice\"',",
											"    'jsonData.page.elements[0].elements[0].format.options.length === 3',",
											"    'jsonData.page.elements[0].elements[1].type === \"Question\"',",
											"    'jsonData.page.elements[0].elements[1].title === \"Recipient\"',",
											"    'jsonData.page.elements[0].elements[1].format.type === \"choice\"',",
											"    'jsonData.page.elements[0].elements[1].format.options.length === 2',",
											"    'jsonData.page.elements[0].elements[2].type === \"Question\"',",
											"    'jsonData.page.elements[0].elements[2].title === \"Content\"',",
											"    'jsonData.page.elements[0].elements[2].format.type === \"note\"',",
											"];",
											"",
											"asserts.forEach(function(assert) { tests[assert]=eval(assert); });",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/CustomLetterBuilder",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"CustomLetterBuilder"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "RestfulPageFlowBridge Manual",
			"description": null,
			"item": [
				{
					"name": "DocumentManager",
					"description": null,
					"item": [
						{
							"name": "SKIP TESTS",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setNextRequest(\"END\");"
										],
										"id": "b0f87434-2b63-4835-91a0-733386a9d86a",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8080",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080"
								}
							},
							"response": []
						},
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open DocumentManager page (no docs)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"tests['page.elements[1].documents.length === 0'] = jsonData.page.elements[1].documents.length === 0;",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/f728043d-f469-441d-8cef-aed6eb4c185a/page/DocumentManager",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"f728043d-f469-441d-8cef-aed6eb4c185a",
										"page",
										"DocumentManager"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload a file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "json",
											"type": "text",
											"value": "{\"documentType\":\"i18n_Unknown\", \"title\":\"Supplied Title\", \"description\":\"Some text describing the document.\"}"
										},
										{
											"key": "file",
											"type": "file",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/product/AIL.Demo.WidgetShowcase/{{policyId}}/UploadDocument",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"product",
										"AIL.Demo.WidgetShowcase",
										"{{policyId}}",
										"UploadDocument"
									]
								}
							},
							"response": []
						},
						{
							"name": "Open DocumentManager page (one doc)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"tests['page.elements[1].documents.legnth === 0'] = jsonData.page.elements[1].documents.length === 1;",
											"tests['page.elements[1].documents[0].title.value === \"Supplied Title\"'] = jsonData.page.elements[1].documents[0].title.value === \"Supplied Title\";",
											"tests['page.elements[1].documents[0].description.value === \"Some text describing the document.\"'] = jsonData.page.elements[1].documents[0].description.value === \"Some text describing the document.\";",
											"",
											"postman.setGlobalVariable(\"titleId\", jsonData.page.elements[1].documents[0].title.valueId);",
											"postman.setGlobalVariable(\"descriptionId\", jsonData.page.elements[1].documents[0].description.valueId);",
											"postman.setGlobalVariable(\"op\", jsonData.page.navigation[0].operations[0].op);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/DocumentManager",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"DocumentManager"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update document title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"tests['page.elements[1].documents.legnth === 0'] = jsonData.page.elements[1].documents.length === 1;",
											"tests['page.elements[1].documents[0].title.value === \"New Title\"'] = jsonData.page.elements[1].documents[0].title.value === \"New Title\";",
											"tests['page.elements[1].documents[0].description.value === \"Some text describing the document.\"'] = jsonData.page.elements[1].documents[0].description.value === \"Some text describing the document.\";",
											"",
											"postman.setGlobalVariable(\"titleId\", jsonData.page.elements[1].documents[0].title.valueId);",
											"postman.setGlobalVariable(\"descriptionId\", jsonData.page.elements[1].documents[0].description.valueId);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{op}}\",\n  \"{{titleId}}\": \"New Title\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/DocumentManager",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"DocumentManager"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update document description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"",
											"tests['page.elements[1].documents.length === 0'] = jsonData.page.elements[1].documents.length === 1;",
											"tests['page.elements[1].documents[0].title.value === \"New Title\"'] = jsonData.page.elements[1].documents[0].title.value === \"New Title\";",
											"tests['page.elements[1].documents[0].description.value === \"A new decription for this document.\"'] = jsonData.page.elements[1].documents[0].description.value === \"A new decription for this document.\";",
											"",
											"postman.setGlobalVariable(\"titleId\", jsonData.page.elements[1].documents[0].title.valueId);",
											"postman.setGlobalVariable(\"descriptionId\", jsonData.page.elements[1].documents[0].description.valueId);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"op\": \"{{op}}\",\n  \"{{descriptionId}}\": \"A new decription for this document.\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/policy/{{policyId}}/page/DocumentManager",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"policy",
										"{{policyId}}",
										"page",
										"DocumentManager"
									]
								}
							},
							"response": []
						},
						{
							"name": "END",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8080",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080"
								}
							},
							"response": []
						},
						{
							"name": "Home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests['success === true'] = jsonData.success === true;",
											"",
											"postman.setGlobalVariable(\"action\", jsonData.action);",
											"postman.setGlobalVariable(\"policyId\", jsonData.action.split(\"/\")[6]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRhbUBvcGVudW5kZXJ3cml0ZXIub3JnOmFkYW0="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/pageflow/QuotationPageFlow/product/AIL.Demo.WidgetShowcase",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"pageflow",
										"QuotationPageFlow",
										"product",
										"AIL.Demo.WidgetShowcase"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "AccountingPeriod",
					"description": null,
					"item": [
						{
							"name": "SKIP TESTS",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setNextRequest(\"END\");"
										],
										"id": "b0f87434-2b63-4835-91a0-733386a9d86a",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8080",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080"
								}
							},
							"response": []
						},
						{
							"name": "ListAccountingPeriods",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4305a966-6332-4040-b4bd-56ac6891825a",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"success returned\"] = jsonData.success === true;",
											"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
											"tests[\"message\"] = jsonData.message === \"Upgrades complete.\";"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/product/AIL.Base/ListAccountingPeriods",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"product",
										"AIL.Base",
										"ListAccountingPeriods"
									]
								}
							},
							"response": []
						},
						{
							"name": "CloseAccountingPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4305a966-6332-4040-b4bd-56ac6891825a",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"success returned\"] = jsonData.success === true;",
											"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
											"tests[\"message\"] = jsonData.message === \"Upgrades complete.\";"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "adam",
											"type": "string"
										},
										{
											"key": "username",
											"value": "adam@openunderwriter.org",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"accountingPeriodId\": \"489ac753-4ef7-4500-ba3b-09796978d0f4\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/product/AIL.Base/CloseAccountingPeriod",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"product",
										"AIL.Base",
										"CloseAccountingPeriod"
									]
								}
							},
							"response": []
						},
						{
							"name": "END",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8080",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080"
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}